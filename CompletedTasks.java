/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package TaskOrganization;

import java.util.ArrayList;
import java.util.Comparator;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author melissacmitchell
 */
public final class CompletedTasks extends javax.swing.JDialog {
    //creates model
    DefaultTableModel model; 
    
    //all tasks stored in array
    ArrayList<Task> tasks = new ArrayList<>();
    
    //defaults filter to all tasks
    DisplayFilter displayFilter = DisplayFilter.Both;
    
    //defaults categories to all categories
    boolean filterCategories = false;
    Category categoryFilter = null;
    
    //defaults month and year to all
    int monthToFilter = -1;
    int yearToFilter = -1;
    int dayToFilter = -1;
        
    
    /**
     * Creates new form CompletedTasks
     */
    public CompletedTasks(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        //sets table columns
        model = new DefaultTableModel();
                    model.addColumn("Month");
                    model.addColumn("Year");
                    model.addColumn("Day");
                    model.addColumn("Authentication");
                    model.addColumn("Instructions");
                    model.addColumn("Category");
                    model.addColumn("Repeating?");
                    
        //sets model  
        tableCompleted.setModel(model);
        
        //sets column widths
        tableCompleted.getColumnModel().getColumn(0).setPreferredWidth(110);
        tableCompleted.getColumnModel().getColumn(1).setPreferredWidth(75);
        tableCompleted.getColumnModel().getColumn(2).setPreferredWidth(50);
        tableCompleted.getColumnModel().getColumn(3).setPreferredWidth(180);
        tableCompleted.getColumnModel().getColumn(4).setPreferredWidth(350);
        tableCompleted.getColumnModel().getColumn(5).setPreferredWidth(130);
        tableCompleted.getColumnModel().getColumn(6).setPreferredWidth(130);
        
        readFromFile();
        updateDisplay();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tableCompleted = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        buttonMainMenu = new javax.swing.JButton();
        comboBoxDay = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        buttonAddFilter = new javax.swing.JButton();
        comboBoxCategory = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        comboBoxYear = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        comboBoxMonth = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        tableCompleted.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Month", "Year", "Day", "Category", "Instructions", "Repeating?", "Authentication?"
            }
        ));
        jScrollPane1.setViewportView(tableCompleted);
        if (tableCompleted.getColumnModel().getColumnCount() > 0) {
            tableCompleted.getColumnModel().getColumn(4).setPreferredWidth(300);
            tableCompleted.getColumnModel().getColumn(5).setPreferredWidth(120);
            tableCompleted.getColumnModel().getColumn(6).setPreferredWidth(120);
        }

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel1.setText("Completed Tasks");

        buttonMainMenu.setText("Done");
        buttonMainMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonMainMenuActionPerformed(evt);
            }
        });

        comboBoxDay.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "All", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "5", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        comboBoxDay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxDayActionPerformed(evt);
            }
        });

        jLabel2.setText("Category");

        buttonAddFilter.setText("Add Filter");
        buttonAddFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAddFilterActionPerformed(evt);
            }
        });

        comboBoxCategory.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "All", "Homework", "Crafts", "Housework", "Piano", "Miscellaneous" }));
        comboBoxCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxCategoryActionPerformed(evt);
            }
        });

        jLabel3.setText("Year");

        comboBoxYear.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "All", "2020", "2021", "2022", "2023", "2024" }));
        comboBoxYear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxYearActionPerformed(evt);
            }
        });

        jLabel4.setText("Month");

        comboBoxMonth.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "All", "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        comboBoxMonth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxMonthActionPerformed(evt);
            }
        });

        jLabel5.setText("Day");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(157, 157, 157)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(comboBoxCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(comboBoxMonth, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(comboBoxYear, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(18, 18, 18)
                                .addComponent(comboBoxDay, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(131, 131, 131))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(52, 52, 52)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 653, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(296, 296, 296)
                            .addComponent(jLabel1))))
                .addGap(0, 67, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(buttonAddFilter)
                .addGap(197, 197, 197)
                .addComponent(buttonMainMenu)
                .addGap(55, 55, 55))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel1)
                .addGap(30, 30, 30)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(comboBoxCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(comboBoxYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(comboBoxMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(comboBoxDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(buttonAddFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(44, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(buttonMainMenu)
                        .addGap(17, 17, 17))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonMainMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonMainMenuActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_buttonMainMenuActionPerformed

    private void comboBoxDayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxDayActionPerformed
        // TODO add your handling code here:
        if (comboBoxDay.getSelectedIndex() == 0) {
            dayToFilter = -1;
        } else {
            dayToFilter = Integer.valueOf((String)comboBoxDay.getSelectedItem());
        }
    }//GEN-LAST:event_comboBoxDayActionPerformed

    private void buttonAddFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAddFilterActionPerformed
        //applies filter
        updateDisplay();
    }//GEN-LAST:event_buttonAddFilterActionPerformed

    private void comboBoxCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxCategoryActionPerformed
        // TODO add your handling code here:
        //Sets filter
        if (comboBoxCategory.getSelectedIndex() == 0) {
            filterCategories = false;
        } else {
            filterCategories = true;
            categoryFilter = Category.CreateFromString(comboBoxCategory.getSelectedItem().toString());
        }
    }//GEN-LAST:event_comboBoxCategoryActionPerformed

    private void comboBoxYearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxYearActionPerformed
        // TODO add your handling code here:
        //Sets filter for year
        if (comboBoxYear.getSelectedIndex() == 0) {
            yearToFilter = -1;
        } else {
            yearToFilter = Integer.valueOf((String)comboBoxYear.getSelectedItem());
        }
    }//GEN-LAST:event_comboBoxYearActionPerformed

    private void comboBoxMonthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxMonthActionPerformed
        // TODO add your handling code here:
        //Sets filter for month
        if (comboBoxMonth.getSelectedIndex() == 0) {
            monthToFilter = -1;
        } else {
            String month = (String)comboBoxMonth.getSelectedItem();;
            monthToFilter = Conversions.convertStringToMonth(month);
        }
    }//GEN-LAST:event_comboBoxMonthActionPerformed

    //reads the tasks in from disk
    private void readFromFile(){
    
        tasks = FileIO.readCompletedTasks();
       
        //if there are no tasks, create empty array
        if (tasks == null) {
            tasks = new ArrayList<>();
        }
 
    }
    
    
    
    //sorts and filters the data and updates the display
    public void updateDisplay() {
        
        int count;
        count = model.getRowCount();
       
        //Remove all rows from existing table
        for (int removeItem = 0; removeItem < count; removeItem++) {
            model.removeRow(0);
        }
        
        //Goes through tasks and separates them based on selection
        for(Task task : tasks){
            if (Filters.passesTaskFilter(task, displayFilter) &&
                Filters.passesCategoryFilter(task, filterCategories ? categoryFilter : null) &&
                Filters.passesMonthFilter(task, monthToFilter) &&
                Filters.passesDayFilter(task, dayToFilter) &&
                Filters.passesYearFilter(task, yearToFilter)) {

                // If the transaction passes all the filters, add it to the model
                model.addRow(new Object[]{  
                    Conversions.convertMonthToString(task.getMonth()),
                    task.getYear(),
                    task.getDay(),
                    task.getAuthentication() ? "Yes" : "No",
                    task.getInstructions(),
                    task.getCategory(),
                    task.getRepeating() ? "Yes" : "No"
                });
            }
        }
     }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CompletedTasks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CompletedTasks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CompletedTasks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CompletedTasks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                CompletedTasks dialog = new CompletedTasks(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonAddFilter;
    private javax.swing.JButton buttonMainMenu;
    private javax.swing.JComboBox<String> comboBoxCategory;
    private javax.swing.JComboBox<String> comboBoxDay;
    private javax.swing.JComboBox<String> comboBoxMonth;
    private javax.swing.JComboBox<String> comboBoxYear;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableCompleted;
    // End of variables declaration//GEN-END:variables
}
